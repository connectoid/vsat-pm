# Generated by Django 4.0.10 on 2025-01-21 05:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите наименование клиента (Организация или ФИО если заказчик физ. лицо)', max_length=255)),
                ('contact_person_name', models.CharField(max_length=100)),
                ('contact_person_phone', models.CharField(max_length=255)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Введите наименование заказчика (Оператор или обслуживающая компания)', max_length=255)),
                ('is_operator', models.BooleanField(default=True)),
                ('contact_person_name', models.CharField(max_length=100)),
                ('contact_person_phone', models.CharField(max_length=255)),
                ('contact_person_email', models.EmailField(max_length=254)),
                ('address', models.TextField()),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='WorkType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('base_price', models.IntegerField(blank=True)),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Наименование работ')),
                ('adding_date', models.DateField(auto_now_add=True, verbose_name='Дата создания задачи')),
                ('description', models.TextField(blank=True, verbose_name='Описание задачи')),
                ('cost', models.IntegerField(blank=True, verbose_name='Стоимость работ (руб.)')),
                ('address', models.TextField(verbose_name='Адрес объекта')),
                ('is_done', models.BooleanField(default=False, verbose_name='Завершена')),
                ('is_canceled', models.BooleanField(default=False, verbose_name='Отменена')),
                ('is_invoiced', models.BooleanField(default=False, verbose_name='Выставлены документы')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Оплачена')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.client', verbose_name='Клиент')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.customer', verbose_name='Заказчи')),
                ('executor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_types', to='task.worktype', verbose_name='Вид работ')),
            ],
            options={
                'ordering': ['pk'],
            },
        ),
    ]
